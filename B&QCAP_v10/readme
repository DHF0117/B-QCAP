v1:设计实现泊位岸桥分配问题的编码实现

v2:尝试对遗传算法进行编码，其中遗传算法的选择算子为轮盘赌算法
    
v3:在v2的基础上添加遗传算法，完成设计

v4:加入适应度函数值的计算: CalculatePopulationScore方法

v5:解决小bug，判断是否在setScore时出错
        发现问题所在：setScore方法要用到一些参数，如goodsAmount[]，这些参数在setScore后会变化，
        因此在GeneticAlgorithm中第二次setScore时将产生不同的Score值，
        解决方法：将setScore方法从Chromosome类移动到GeneticAlgorithm类里

v6:更改交叉部分的流程，需要添加判断交叉后的shipOrder[]变量是否符合约束条件
        如果不符合，需要进行操作：
        1.假设父母为chro1 chro2
        2.对chro1交叉区域内的出现两次的顺序编号(假设顺序1)，找到chro2中对应位置的顺序编号(假设顺序3)
        3.在chro1交叉区域外找到顺序1对应的SO/SB/SC，在chro2交叉区域外找到顺序3对应的SO/SB/SC，两者进行交换
        4.重复2 3，直到顺序编号SO这个部分符合约束条件，即不能有重复编号
        5.判断此时的SC中是否符合约束条件，即分配的岸桥不能大于最大可接受岸桥
        将数据改为从data文件中读取
        剩余问题：始终不能得到最好的适应度值和染色体组，即算法部分是有问题的

V7:尝试解决不能收敛的问题
        解决方案：
        选择操作修改：适应度值越大选中几率越低
                同时，这里发现了一个大的错误：选择操作应该是选择出一整个种群后再对这个新种群进行交叉，而不是选择两个后进行交叉再放入新种群中
        取消变异步长参数，只对一个位置进行变异

v8:适应度函数值变为在港时间的倒数，则选择操作可以按正常的轮盘赌进行
        剩余问题：交叉和变异后的结果数组是混乱的，原因未知，可能是Chromosome类里的静态方法导致的

v9:交叉和变异操作移动到GeneticAlgorithm里，避免在Chromosome类里使用静态方法导致的数组混乱问题
        更改交叉部分的流程，
        如果不符合，需要进行操作：
        1.假设父母为chro1 chro2
        2.对chro1交叉区域内的出现两次的顺序编号(假设顺序1为第一次重复)，找到chro2中相同对应重复次数的顺序编号(假设顺序3也是第一次重复)
        3.在chro1交叉区域外找到顺序1对应的SO/SB/SC，在chro2交叉区域外找到顺序3对应的SO/SB/SC，两者进行交换
        4.重复2 3，直到顺序编号SO这个部分符合约束条件，即不能有重复编号
        5.判断此时的SC中是否符合约束条件，即分配的岸桥不能大于最大可接受岸桥
        即:v6版本中的交叉操作是有问题的，在chro1中有重复的地方，在chro2同样的位置不一定也会重复，这样将在while循环里陷入死循环

v10:加入绘制折线图功能，把最好值和平均值以折线图的形式展现出来
    JFreeChart开源框架
          加入导出Excel功能，把最后一代的染色体组以Excel的形式展现出来


